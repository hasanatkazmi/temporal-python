name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'README.md'
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Python 3.7 is not available on macOS-latest and ubuntu-latest (GitHub updated)
          - os: macos-latest
            python-version: '3.7'
          - os: ubuntu-latest
            python-version: '3.7'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov flake8 black mypy

    - name: Install backports.zoneinfo for Python < 3.9
      if: matrix.python-version == '3.7' || matrix.python-version == '3.8'
      run: pip install backports.zoneinfo

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 temporal/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 temporal/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check formatting with black
      run: |
        black --check temporal/ tests/

    - name: Type check with mypy
      run: |
        mypy temporal/ --ignore-missing-imports

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=temporal --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff temporal/ tests/

    - name: Lint with flake8
      run: |
        flake8 temporal/ tests/

    - name: Check formatting with black
      run: |
        black --check temporal/ tests/

    - name: Type check with mypy
      run: |
        mypy temporal/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Security check with bandit
      run: |
        bandit -r temporal/ -f json -o bandit-report.json || true
        bandit -r temporal/

    - name: Check dependencies with safety
      run: |
        pip freeze | safety check --stdin

  build:
    needs: [test, lint-and-format]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
